{"remainingRequest":"D:\\UI\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js!D:\\UI\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\UI\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UI\\vue-admin-template\\src\\views\\user_transaction\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\UI\\vue-admin-template\\src\\views\\user_transaction\\index.vue","mtime":1702218537805},{"path":"D:\\UI\\vue-admin-template\\babel.config.js","mtime":1702104195098},{"path":"D:\\UI\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702107941332},{"path":"D:\\UI\\vue-admin-template\\node_modules\\babel-loader\\lib\\index.js","mtime":1702107941341},{"path":"D:\\UI\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702107941332},{"path":"D:\\UI\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1702107940106}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldEFjY291bnRMaXN0IH0gZnJvbSAnQC9hcGkvdXNlcl90cmFuc2FjdGlvbnMnOwpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaEFkZHJlc3M6ICcnLAogICAgICB0cmFuc2FjdGlvbnM6IFtdCiAgICAgIC8vIHBhZ2VfdG90YWxfc2l6ZTogMzAsCiAgICAgIC8vIHBlcl9wYWdlX3NpemU6IDUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBmZXRjaFRyYW5zYWN0aW9uc0RhdGE6IGZ1bmN0aW9uIGZldGNoVHJhbnNhY3Rpb25zRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdmFyIHBhcmFtcyA9IHsKICAgICAgICBhZGRyZXNzOiB0aGlzLnNlYXJjaEFkZHJlc3MKICAgICAgfTsKICAgICAgZ2V0QWNjb3VudExpc3QocGFyYW1zKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzLnRyYW5zYWN0aW9ucyA9IHJlc3BvbnNlLmRhdGEuZGF0YS50cmFuc2FjdGlvbnM7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm9yIGZldGNoaW5nIHRyYW5zYWN0aW9uczonLCBlcnJvcik7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"names":["getAccountList","data","searchAddress","transactions","methods","fetchTransactionsData","_this","params","address","then","response","catch","error","console"],"sources":["src/views/user_transaction/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-container\">\n    混币交易查询界面\n    <p></p>\n    <el-input placeholder=\"请输入地址\" v-model=\"searchAddress\" class=\"input-with-select\">\n      <el-select v-model=\"select\" slot=\"prepend\" placeholder=\"请选择\">\n        <el-option label=\"Ethereum\" value=\"1\"></el-option>\n        <el-option label=\"BNB\" value=\"2\"></el-option>\n        <el-option label=\"Matic\" value=\"3\"></el-option>\n        <el-option label=\"Optimism\" value=\"4\"></el-option>\n      </el-select>\n      <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"fetchTransactionsData\"></el-button>\n    </el-input>\n\n    <el-table :data=\"transactions\" stripe：style=\"width: 180%\">\n      <el-table-column prop=\"hash\" label=\"交易哈希\"></el-table-column>\n      <el-table-column prop=\"timeStamp\" label=\"交易时间\"></el-table-column>\n      <el-table-column prop=\"value\" label=\"资金额\"></el-table-column>\n      <el-table-column prop=\"flag\" label=\"交易行为\"></el-table-column>\n    </el-table>\n  </div>\n</template>\n\n<style>\n  .el-select .el-input {\n    width: 130px;\n  }\n  .input-with-select .el-input-group__prepend {\n    background-color: #fff;\n  }\n</style>\n\n<script>\nimport { getAccountList } from '@/api/user_transactions'\n\nexport default {\n  data() {\n    return {\n      searchAddress: '',\n      transactions: []\n      // page_total_size: 30,\n      // per_page_size: 5\n    }\n  },\n  methods: {\n    fetchTransactionsData() {\n      const params = { address: this.searchAddress }\n      getAccountList(params).then(response => {\n        this.transactions = response.data.data.transactions\n      }).catch(error => {\n        console.error('Error fetching transactions:', error)\n      })\n    }\n  }\n}\n</script>\n<!--<template>-->\n<!--  <div class=\"app-container\">-->\n<!--    面向混币账户的去匿名化账户关联分析系统-->\n<!--    <el-table-->\n<!--      :data=\"tableData\"-->\n<!--      stripe-->\n<!--      style=\"width: 100%\">-->\n<!--      <el-table-column-->\n<!--        prop=\"from\"-->\n<!--        label=\"from\"-->\n<!--        width=\"180\">-->\n<!--      </el-table-column>-->\n<!--      <el-table-column-->\n<!--        prop=\"to\"-->\n<!--        label=\"to\">-->\n<!--      </el-table-column>-->\n<!--    </el-table>-->\n<!--  </div>-->\n<!--</template>-->\n\n<!--<script>-->\n<!--import { getTransactionList } from '@/api/user_transactions'-->\n<!--export default {-->\n<!--  data() {-->\n<!--    return {-->\n<!--      tableData: [-->\n<!--        {-->\n<!--          from: '0x1',-->\n<!--          to: '0x112'-->\n<!--        },-->\n<!--        {-->\n<!--          from: '0x2',-->\n<!--          to: '0x112'-->\n<!--        },-->\n<!--        {-->\n<!--          from: '0x3',-->\n<!--          to: '0x112'-->\n<!--        }-->\n<!--      ],-->\n\n<!--      listLoading: true-->\n<!--    }-->\n<!--  },-->\n<!--  created() {-->\n<!--    this.fetchData()-->\n<!--  },-->\n<!--  methods: {-->\n<!--    fetchData() {-->\n<!--      this.listLoading = true-->\n<!--      getTransactionList().then(response => {-->\n<!--        this.tableData = response.data.transactions-->\n<!--        this.listLoading = false-->\n<!--        console.log('back end data = ', this.tableData)-->\n<!--      }).catch(e => {-->\n<!--        console.log(e)-->\n<!--      })-->\n<!--    }-->\n<!--  }-->\n<!--}-->\n<!--</script>-->\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAAA,cAAA;AAEA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAC,aAAA;MACAC,YAAA;MACA;MACA;IACA;EACA;EACAC,OAAA;IACAC,qBAAA,WAAAA,sBAAA;MAAA,IAAAC,KAAA;MACA,IAAAC,MAAA;QAAAC,OAAA,OAAAN;MAAA;MACAF,cAAA,CAAAO,MAAA,EAAAE,IAAA,WAAAC,QAAA;QACAJ,KAAA,CAAAH,YAAA,GAAAO,QAAA,CAAAT,IAAA,CAAAA,IAAA,CAAAE,YAAA;MACA,GAAAQ,KAAA,WAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;MACA;IACA;EACA;AACA"}]}