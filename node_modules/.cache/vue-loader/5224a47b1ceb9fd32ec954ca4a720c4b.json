{"remainingRequest":"D:\\UI\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\UI\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\UI\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\UI\\vue-admin-template\\src\\views\\GetHeuristicRulesⅢ_ERC20TransferLink\\index.vue?vue&type=template&id=0aeb4616","dependencies":[{"path":"D:\\UI\\vue-admin-template\\src\\views\\GetHeuristicRulesⅢ_ERC20TransferLink\\index.vue","mtime":1704441961203},{"path":"D:\\UI\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702107941332},{"path":"D:\\UI\\vue-admin-template\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1702107940134},{"path":"D:\\UI\\vue-admin-template\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1702107941332},{"path":"D:\\UI\\vue-admin-template\\node_modules\\vue-loader\\lib\\index.js","mtime":1702107940106}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}